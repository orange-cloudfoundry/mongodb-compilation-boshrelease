set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# $BOSH_COMPILE_TARGET - where this package & spec'd source files are available
# $BOSH_INSTALL_TARGET - where you copy/install files to be included in package
#/sbin/swapoff -a

export HOME=/var/vcap

#cp -a brokers $BOSH_INSTALL_TARGET/brokers
# Retrieving number of cpus on compilation server
  cpun_=`lscpu | grep '^CPU('|tr -d [:space:]|cut -d":" -f2`

# Compiling needed libs

# m4

for i in `find gcc/  -type f -name 'm4-*tar*' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  ./configure --prefix=$BOSH_INSTALL_TARGET
  make && make install
  cd ..
done

# gmp
for i in `find gcc/  -type f -name 'gmp-*tar*' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  ./configure --prefix=$BOSH_INSTALL_TARGET M4=$BOSH_INSTALL_TARGET/bin/m4
  make && make install
  cd ..
done

# mpfr
for i in `find gcc/  -type f -name 'mpfr-*tar*' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  ./configure --prefix=$BOSH_INSTALL_TARGET --with-gmp=$BOSH_INSTALL_TARGET 
  make && make install
  cd ..
done


# mpc
for i in `find gcc/  -type f -name 'mpc-*tar*' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  ./configure --prefix=$BOSH_INSTALL_TARGET --with-gmp=$BOSH_INSTALL_TARGET --with-mpfr=$BOSH_INSTALL_TARGET
  make && make install
  cd ..
done

# Filling PATHs
export LD_LIBRARY_PATH=`echo $BOSH_INSTALL_TARGET/lib:${LD_LIBRARY_PATH:-''}|sed -e 's/^://' -e 's/:$//'`
export C_INCLUDE_PATH=`echo $BOSH_INSTALL_TARGET/include:${C_INCLUDE_PATH:-''}|sed -e 's/^://' -e 's/:$//'`

# Compiling GCC

for i in `find gcc/  -type f -name 'gcc*.tar.gz' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  mkdir build
  cd build
  LDFLAGS="-L$BOSH_INSTALL_TARGET/lib" CPPFLAGS="-I$BOSH_INSTALL_TARGET/include" ../configure -v \
  --prefix=$BOSH_INSTALL_TARGET --enable-shared --enable-linker-build-id --without-included-gettext --enable-threads=posix  \
  --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes \
  --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin \
  --enable-gtk-cairo --with-arch-directory=amd64 --enable-objc-gc --with-tune=generic \
  --enable-checking=release --build=x86_64-linux-gnu \
  --with-gmp=$BOSH_INSTALL_TARGET --with-mpfr=$BOSH_INSTALL_TARGET \
  --with-mpc=$BOSH_INSTALL_TARGET --disable-multilib

  #LDFLAGGS="-L$BOSH_INSTALL_TARGET/lib" CPPFLAGS="-I$BOSH_INSTALL_TARGET/include" ../configure \
  #--prefix=$BOSH_INSTALL_TARGET \
  #--with-gmp=$BOSH_INSTALL_TARGET --with-mpfr=$BOSH_INSTALL_TARGET \
  #--with-mpc=$BOSH_INSTALL_TARGET --with-isl=$BOSH_INSTALL_TARGET --disable-multilib
  make -j $cpun_ 
  make install
  cd ../..
done

# adding libpcap 

for i in `find gcc/  -type f -name 'libpcap*.tar.*' -print`
do
  ext_dir=`tar -tvf $i |tail -1| tr -s [:space:] | cut -d" " -f6 |cut -d"/" -f1`
  tar xf $i
  cd $ext_dir
  mkdir build
  cd build
  ../configure --prefix=$BOSH_INSTALL_TARGET CC=$BOSH_INSTALL_TARGET/bin/gcc CPPFLAGS=-I$BOSH_INSTALL_TARGET/include LDFLAGS=-L$BOSH_INSTALL_TARGET/lib
  make && make install
  cd ../..
done