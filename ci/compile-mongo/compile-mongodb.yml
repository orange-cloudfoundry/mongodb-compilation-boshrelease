---
jobs:
- name: compile_mongo
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: go-1.8-vendor-package
      - task: create-bosh-config
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: concourse/bosh-cli
              tag: latest
          outputs:
            - name: bosh-director-config
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                mkdir -p bosh-director-config
                cd bosh-director-config || exit 115
                cat > ./bosh_ca.crt <<EOF
                ((bosh-server.ca))
                EOF
                export BOSH_CONFIG=$PWD/bosh_config.yml
                bosh -e ((bosh-server.ip)) alias-env ((bosh-server.alias)) --ca-cert=./bosh_ca.crt
                ( echo ((bosh-server.user)) ; echo ((bosh-server.password)) ) \
                    | bosh -e ((bosh-server.alias)) log-in

    - task: create-release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: concourse/bosh-cli
            tag: latest
        inputs:
          - name: bosh-director-config
          - name: mongodb-compilation-bosh-release
          - name: go-1.8-vendor-package
        run:
          path: /bin/bash
          args:
            - -exc
            - |
              export BOSH_CONFIG=$PWD/bosh-director-config/bosh_config.yml
              cd ((bosh-deployment.name))-bosh-release|| exit 115

              # Creating fake files for already deployed releases
              if [ ! -d dev_releases/((bosh-deployment.release)) ]
              then
                mkdir -p dev_releases/((bosh-deployment.release))
              fi
              for release in $(bosh -e ((bosh-server.alias)) releases -d ((bosh-deployment.name)) --column="Version")
              do
                release=$(echo $release|sed -e "s/\*$//")
                commit_hash=$(bosh -e ((bosh-server.alias)) releases -d ((bosh-deployment.name)) --column="commit hash")
                if [ ! -f dev_releases/((bosh-deployment.release))/index.yml ]
                then
                  echo "builds:" > dev_releases/((bosh-deployment.release))/index.yml
                fi
                if [ ! -f dev_releases/((bosh-deployment.release))/((bosh-deployment.release))-${release}.yml ]
                then
                  cat > dev_releases/((bosh-deployment.release))/((bosh-deployment.release))-${release}.yml <<EOF
                  name: ((bosh-deployment.release))
                  version: ${release}
                  commit_hash: ${commit_hash}
                  uncommitted_changes: false
              EOF
                  cat >> dev_releases/((bosh-deployment.release))/index.yml <<EOF
                    $(cat /proc/sys/kernel/random/uuid):
                      version: ${release}
              EOF
                fi
              done

              bosh -e ((bosh-server.alias)) create-release # --force


              bosh -e ((bosh-server.alias)) upload-release

              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) -n deploy \
              manifest.yml -o ci/concourse-network.yml

    - task: run-errand
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: concourse/bosh-cli
            tag: latest
        inputs:
          - name: bosh-director-config
          - name: mongodb-compilation-bosh-release
        run:
          path: /bin/bash
          args:
            - -exc
            - |
              export BOSH_CONFIG=$PWD/bosh-director-config/bosh_config.yml
              cd ((bosh-deployment.name))-bosh-release || exit 115
              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) -n run-errand make-tar --keep-alive

              src_vm=$(bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) vms --column="instance"|tr -d [:space:])

              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) scp \
              ${src_vm}:/var/vcap/store/((bosh-deployment.job))/archive/mongodb-linux-x86_64-*.tar.gz .

              file=`ls mongodb-linux-x86_64-*.tar.gz`
              echo file: $file
              bosh -e ((bosh-server.alias)) add-blob $file mongodb/$file
              bosh -e ((bosh-server.alias)) upload-blobs

              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) -n delete-vm $(bosh -e ((bosh-server.alias)) -d \
              ((bosh-deployment.name)) vms --column="vm cid")

resources:
  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: Initial-commit
  - name: go-1.8-vendor-package
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git