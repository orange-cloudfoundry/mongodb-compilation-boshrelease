---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: regevbr/keyval-resource
      
resources:

  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((git.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((git.branch))
      file: compiled_version
      username: ((git.username))
      password: ((git.password))
      git_user: "((git.git_user)) <((git.email))>"

  - name: rocksdb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((git.branch))
      file: compiled_version
      username: ((git.username))
      password: ((git.password))
      git_user: "((git.git_user)) <((git.email))>"

  - name: dl-versions
    type: keyval

  - name: go-1.8-vendor-package
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git  

jobs:
- name: check-versions
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release       
      - get: mongodb-version
      - get: rocksdb-version

    - task: check-versions
      file: mongodb-compilation-bosh-release/ci/tasks/check-versions.yml

    - put: dl-versions
      params: {file: dl-versions/dl-versions.properties}
           
- name: upload-src
  serial: true
  plan:
    
    - get: mongodb-compilation-bosh-release
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
  
    - get: dl-versions
      trigger: true
      passed: [check-versions]

    - task: download-src
      file: mongodb-compilation-bosh-release/ci/tasks/download-src.yml

    - task: upload-bosh
      file: mongodb-compilation-bosh-release/ci/tasks/upload-bosh.yml
      params:
        ALIAS: ((bosh-server.alias))

    - task: remove-previous-blobs
      file: mongodb-compilation-bosh-release/ci/tasks/remove-previous-blobs.yml
      params:
        ALIAS: ((bosh-server.alias))

    - task: upload-blob-list
      file: mongodb-compilation-bosh-release/ci/tasks/upload-blob-list.yml
      params:
        ACCESS_KEY_ID: ((S3.access_key_id))
        SECRET_ACCESS_KEY: ((S3.secret_access_key))
        ENDPOINT_URL: ((S3.endpoint-url))
        BUCKET: ((S3.bucket))

- name: compilation
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: go-1.8-vendor-package
    
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: create-release
      file: mongodb-compilation-bosh-release/ci/tasks/create-release.yml
      params:
        ALIAS: ((bosh-server.alias)) 
        BOSH_RELEASE: ((bosh-deployment.release))
        
    - task: run-errand
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: concourse/bosh-cli
            tag: latest
        inputs:
          - name: bosh-director-config
          - name: mongodb-compilation-bosh-release
        outputs:
          - name: to-upload
        run:
          path: /bin/bash
          args:
            - -exc
            - |
              export BOSH_CONFIG=$PWD/bosh-director-config/bosh_config.yml
              pushd mongodb-compilation-bosh-release || exit 115
              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) -n run-errand make-tar --keep-alive

              src_vm=$(bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) vms --column="instance"|tr -d [:space:])

              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) scp \
              ${src_vm}:/var/vcap/store/((bosh-deployment.job))/archive/mongodb-linux-x86_64-*.tar.gz .

              file=`ls mongodb-linux-x86_64-*.tar.gz`
              echo file: $file
              bosh -e ((bosh-server.alias)) add-blob $file mongodb/$file
              bosh -e ((bosh-server.alias)) upload-blobs
              bosh -e ((bosh-server.alias)) -d ((bosh-deployment.name)) -n delete-vm $(bosh -e ((bosh-server.alias)) -d \
              ((bosh-deployment.name)) vms --column="vm cid")
              popd
              rsync -ra mongodb-compilation-bosh-release/ to-upload/

    - task: update-github
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: concourse/bosh-cli
            tag: latest
        inputs:
          - name: to-upload
        run:
          path: /bin/bash
          args:
            - -exc
            - |
              cd to-upload || exit 115
              git config --global user.email ((repo.email))
              git config --global user.name "((repo.name))"
              git branch "Upload-test"
              git checkout Upload-test
              git commit -m "Adding Last compiled blob to blob list" config/blobs.yml
    - put: mongodb-compilation-bosh-release-out
      params:
        repository: to-upload
