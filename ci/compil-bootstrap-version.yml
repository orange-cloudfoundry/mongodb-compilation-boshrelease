---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

  - name: mongo-src
    type: docker-image
    source:
      repository: jraverdyorange/concourse-mongo-check-resource

  - name: rocks-src
    type: docker-image
    source:
      repository: jraverdyorange/concourse-rocks-check-resource      
      
resources:

  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))


  - name: mongodb-src
    type: mongo-src
    source:
      version: "((deployment.bootstrap.mongodb-version))"

  - name: rocksdb-src
    type: rocks-src
    source:
      version: "((deployment.bootstrap.rocksdb-version))"
      username: ((repositories.mongodb-compilation.username))
      password: ((repositories.mongodb-compilation.password))
      
  - name: versions
    type: keyval

  - name: upload-lock
    type: pool
    source:
      uri: ((repositories.locks-pool.uri))
      branch: ((repositories.locks-pool.branch))
      pool: bosh
      username: ((repositories.locks-pool.username))
      password: ((repositories.locks-pool.password))    

jobs:

##############################################################################################################
##############################################################################################################
##                                          COMMON BRANCH                                                   ##
##############################################################################################################
##############################################################################################################
           
- name: upload-src
  serial: true
  plan:

    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: mongodb-src
      - get: rocksdb-src        

    - &create-bosh-config
      task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))         

    - task: fill-versions-keyval
      file: mongodb-compilation-bosh-release/ci/compilation/set-versions/tasks/fill-versions.yml

    - put: versions
      params: { file: output/keyval.properties }  

    - &get-config-files
      task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params: &get-config-files-params
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))
        SIGNATURE_VERSION:  ((blobstores.compilation.signature-version))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))
        MONGODB_VERSION:    "ori"

    - task: upload-bosh
      file: mongodb-compilation-bosh-release/ci/compilation/upload-src/tasks/upload-bosh.yml
      params:
        ALIAS: ((bosh-server.alias))

    - task: update-config-files
      file: mongodb-compilation-bosh-release/ci/compilation/upload-src/tasks/update-config-files.yml
      params:
        ALIAS: ((bosh-server.alias))
        BOSH_RELEASE: ((deployment.compilation.release))

    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))

  

##############################################################################################################
##############################################################################################################
##                                          UBUNTU BRANCH                                                   ##
##############################################################################################################
##############################################################################################################
- name: create-release-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [upload-src]


    - *create-bosh-config

    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION: ""

    - &create-release
      task: create-release
      file: mongodb-compilation-bosh-release/ci/compilation/create-release/tasks/create-release.yml
      params: &create-release-params
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
 
- name: deployment-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [create-release-ubuntu]
    
    - *create-bosh-config
    
    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:    "" 

    - &deploy
      task: deploy
      file: mongodb-compilation-bosh-release/ci/compilation/deploy/tasks/deploy.yml
      params: &deploy-params
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
     
- name: create-archive-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [deployment-ubuntu]

    - *create-bosh-config
      

    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:  ""

    - &make-archive
      task: make-archive
      file: mongodb-compilation-bosh-release/ci/compilation/create-archive/tasks/make-archive.yml
      params: &make-archive-params
        ALIAS: ((bosh-server.alias))
        DEPLOYMENT_NAME: ((deployment.compilation.name))
        INSTANCE_GROUP:  ((deployment.compilation.instance-group))

    - &upload-lock
      put: upload-lock
      params: {claim: upload-s3}

    # This second lanch of this get task is needed by the patching task below !!!
    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:  ""
      on_failure: &upload-unlock
        put: upload-lock
        params: {release: upload-lock}
      on_abort:
        *upload-unlock        
    
    - &patch-config-files
      task: patch-config-files
      file: mongodb-compilation-bosh-release/ci/compilation/create-archive/tasks/patch-config-files.yml
      on_failure:
        *upload-unlock
      on_abort:
        *upload-unlock

    - &upload-config-files
      task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params: &upload-config-files-params
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))
      ensure:
        *upload-unlock

    - &delete-deployment
      task: delete-deployment
      file: mongodb-compilation-bosh-release/ci/compilation/create-archive/tasks/delete-deployment.yml
      params: &delete-deployment-params
        ALIAS:           ((bosh-server.alias))
        DEPLOYMENT_NAME: ((deployment.compilation.name))

##############################################################################################################
##############################################################################################################
##                                          CENTOS BRANCH                                                   ##
##############################################################################################################
##############################################################################################################

- name: create-release-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [upload-src]

    - *create-bosh-config

    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:    ""

    - <<: *create-release
      params:
        <<: *create-release-params
        STEMCELL_TYPE:    centos

- name: deployment-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [create-release-centos]

    - *create-bosh-config
    
    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION: ""

    - <<: *deploy
      params:
        <<: *deploy-params
        STEMCELL_TYPE:    centos

- name: create-archive-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: versions
        trigger: true
        passed: [deployment-centos]

    - *create-bosh-config

    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:  ""

    - <<: *make-archive
      params:
        <<: *make-archive-params
        STEMCELL_TYPE:   centos

    - *upload-lock    

    - <<: *get-config-files
      params:
        <<: *get-config-files-params
        MONGODB_VERSION:  ""
      on_failure:
        *upload-unlock
      on_abort:
        *upload-unlock       

    - <<: *patch-config-files
      params:
        STEMCELL_TYPE: centos

    - *upload-config-files

    - <<: *delete-deployment
      params:
        <<: *delete-deployment-params
        STEMCELL_TYPE:   centos

##############################################################################################################
##############################################################################################################
##                                          Clean blobstore                                                  ##
##############################################################################################################
##############################################################################################################

- name: clean-blobstore
  plan:
    - aggregate:
      - get: versions
        passed: [create-archive-centos, create-archive-ubuntu]
        trigger: true

      - get: mongodb-compilation-bosh-release
        
    - task: clean-blobstore
      file: mongodb-compilation-bosh-release/ci/common/tasks/blobstore-cleanup.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))
