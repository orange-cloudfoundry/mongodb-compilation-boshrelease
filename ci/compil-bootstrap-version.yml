---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource
      
resources:

  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version:  1.0.0
      driver:           git
      uri:              https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch:           ((repositories.mongodb-compilation.branch))
      file:             mongodb_compiled_version
      username:         ((repositories.mongodb-compilation.username))
      password:         ((repositories.mongodb-compilation.password))
      git_user:         "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"

  - name: rocksdb-version
    type: semver
    source: 
      initial_version:  1.0.0
      driver:           git
      uri:              https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch:           ((repositories.mongodb-compilation.branch))
      file:             rocksdb_compiled_version
      username:         ((repositories.mongodb-compilation.username))
      password:         ((repositories.mongodb-compilation.password))
      git_user:         "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"
    

  - name: versions
    type: keyval

  - name: uploaded
    type: keyval

  - name: created
    type: keyval

  - name: deployed
    type: keyval    

jobs:
- name: set-versions
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: mongodb-version
      - get: rocksdb-version 

    - task: set-versions
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/set-versions/tasks/set-versions.yml
      params: 
        MONGO_VERSION:  ((deployment.bootstrap.mongodb-version))
        ROCKS_VERSION:  ((deployment.bootstrap.rocksdb-version))

    - put: versions
      params: {file: versions/keyval.properties}

##############################################################################################################
##############################################################################################################
##                                          COMMON BRANCH                                                   ##
##############################################################################################################
##############################################################################################################
           
- name: upload-src
  serial: true
  plan:
    
    - get: mongodb-compilation-bosh-release
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
  
    - get: versions
      trigger: true
      passed: [set-versions]

    - task: download-src
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/upload-src/tasks/download-src.yml

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: "ori"

    - task: upload-bosh
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/upload-src/tasks/upload-bosh.yml
      params:
        ALIAS: ((bosh-server.alias))

    - task: update-config-files
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/upload-src/tasks/update-config-files.yml
      params:
        ALIAS: ((bosh-server.alias))
        BOSH_RELEASE: ((deployment.compilation.release))

    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - put: uploaded
      params: { file: uploaded/keyval.properties }

  

##############################################################################################################
##############################################################################################################
##                                          UBUNTU BRANCH                                                   ##
##############################################################################################################
##############################################################################################################
- name: create-release-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: uploaded
        trigger: true
        passed: [upload-src]

    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: create-release
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/create-release/tasks/create-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
        MONGODB_VERSION:  ((deployment.bootstrap.mongodb-version))

    - put: created
      params: { file: created/keyval.properties }

- name: deployment-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: created
        trigger: true
        passed: [create-release-ubuntu]
    
    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: deploy
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/deploy/tasks/deploy.yml
      params:
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
        MONGODB_VERSION:  ((deployment.bootstrap.mongodb-version))
    
    - put: deployed
      params: { file: deployed/keyval.properties }

- name: create-archive-ubuntu
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: deployed
        trigger: true
        passed: [deployment-ubuntu]

    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: make-archive
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/create-archive/tasks/make-archive.yml
      params:
        ALIAS: ((bosh-server.alias))
        DEPLOYMENT_NAME: ((deployment.compilation.name))
        INSTANCE_GROUP:  ((deployment.compilation.instance-group))
        
    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))



##############################################################################################################
##############################################################################################################
##                                          CENTOS BRANCH                                                   ##
##############################################################################################################
##############################################################################################################
- name: create-release-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: uploaded
        trigger: true
        passed: [upload-src]

    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: create-release
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/create-release/tasks/create-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
        MONGODB_VERSION:  ((deployment.bootstrap.mongodb-version))
        STEMCELL_TYPE:    centos

    - put: created
      params: { file: created/keyval.properties }    

- name: deployment-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: created
        trigger: true
        passed: [create-release-centos]
    
    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: deploy
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/deploy/tasks/deploy.yml
      params:
        ALIAS:            ((bosh-server.alias))
        UUID:             ((bosh-server.uuid))
        BOSH_RELEASE:     ((deployment.compilation.release))
        DEPLOYMENT_NAME:  ((deployment.compilation.name))
        INSTANCE_GROUP:   ((deployment.compilation.instance-group))
        NETWORK:          ((deployment.compilation.network))
        MONGODB_VERSION:  ((deployment.bootstrap.mongodb-version))
        STEMCELL_TYPE:    centos

    - put: deployed
      params: { file: deployed/keyval.properties }

- name: create-archive-centos
  serial: true
  plan:
    - aggregate:
      - get: mongodb-compilation-bosh-release
      - get: deployed
        trigger: true
        passed: [deployment-centos]

    - get: versions

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT: ((bosh-server.ca))
        IP: ((bosh-server.ip))
        ALIAS: ((bosh-server.alias)) 
        USER: ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID: ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL: ((blobstores.compilation.endpoint-url))
        BUCKET: ((blobstores.compilation.bucket))
        MONGODB_VERSION: ((deployment.bootstrap.mongodb-version))

    - task: make-archive
      file: mongodb-compilation-bosh-release/ci/compil-bootstrap-version/create-archive/tasks/make-archive.yml
      params:
        ALIAS:           ((bosh-server.alias))
        DEPLOYMENT_NAME: ((deployment.compilation.name))
        INSTANCE_GROUP:  ((deployment.compilation.instance-group))
        STEMCELL_TYPE:   centos

    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))
        STEMCELL_TYPE:      centos