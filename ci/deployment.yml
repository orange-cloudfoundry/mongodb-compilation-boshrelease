---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource
      
resources:

  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb-compilation.uri))
      branch: ((repositories.mongodb-compilation.branch))

  - name: mongodb-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb.uri))
      branch: ((repositories.mongodb.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))
      file: mongodb_compiled_version
      username: ((repositories.mongodb-compilation.username))
      password: ((repositories.mongodb-compilation.password))
      git_user: "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"

  - name: rocksdb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))
      file: rocksdb_compiled_version
      username: ((repositories.mongodb-compilation.username))
      password: ((repositories.mongodb-compilation.password))
      git_user: "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"
  
  - name: deployed
    type: keyval

  - name: deployment-specs
    type: keyval  
  
  - name: filled
    type: keyval

  - name: removed
    type: keyval

  - name: bosh-errand-lock
    type: pool
    source:
      uri: ((repositories.locks-pool.uri))
      branch: ((repositories.locks-pool.branch))
      pool: bosh
      username: ((repositories.locks-pool.username))
      password: ((repositories.locks-pool.password))

jobs:
- name: deploy-strap
  serial: true
  plan:
    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release  
    - aggregate:
      - get: mongodb-version
        trigger: true
      - get: rocksdb-version
        trigger: true
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password)) 

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))       
    
    - task: get-config-files-mainrelease
      file: mongodb-compilation-bosh-release/ci/jobs/deploy-strap/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:            ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:        ((blobstores.release.secret_access_key))
        ENDPOINT_URL:             ((blobstores.release.endpoint-url))
        BUCKET:                   ((blobstores.release.bucket))
        COMPIL_ACCESS_KEY_ID:     ((blobstores.compilation.access_key_id))
        COMPIL_SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        COMPIL_ENDPOINT_URL:      ((blobstores.compilation.endpoint-url))
        COMPIL_BUCKET:            ((blobstores.compilation.bucket))
   
    - task: deploy-rs
      file: mongodb-compilation-bosh-release/ci/jobs/deploy-strap/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        

    - put: deployed
      params: { file: deployed/keyval.properties }    

- name: acceptance-tests
  serial: true
  plan:
    - get: deployed
      trigger: true
      passed: [deploy-strap]

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias))
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-acceptance-tests
      file: mongodb-compilation-bosh-release/ci/jobs/acceptance-tests/tasks/run-acceptance-tests.yml
      params:
        ALIAS:    ((bosh-server.alias))  

    - put: bosh-errand-lock
      params: {release: bosh-errand-lock}        

- name: insertion-tests
  serial: true
  plan:
    - get: deployed
      trigger: true
      passed: [deploy-strap]

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: get-mongo-pwd
      file: mongodb-compilation-bosh-release/ci/jobs/insertions-tests/tasks/get-root-pwd.yml
      params:
        BOSH_ALIAS: ((bosh-server.alias))
        IP:         ((deployment.tests.credhub.ip))
        PORT:       ((deployment.tests.credhub.port))
        USER:       ((deployment.tests.credhub.username))
        PASSWORD:   ((deployment.tests.credhub.password))
        VAR:        mongo_root_password

    - put: deployment-specs
      params: { file: output/keyval.properties}

    - task: get-deployment-ips
      file: mongodb-compilation-bosh-release/ci/jobs/insertions-tests/tasks/get-deployment-ips.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - put: deployment-specs
      params: { file: output/keyval.properties}    

    - task: insert-collection
      file: mongodb-compilation-bosh-release/ci/jobs/insertions-tests/tasks/insert-collection.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

    - put: filled
      params: { file: filled/keyval.properties }

- name: backup-restore-test
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [insertion-tests]

    - get: deployment-specs

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: shield-clean-up
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/shield-clean-up.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))

    
    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-shield-import-errand
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/run-shield-errand.yml
      params:
        ALIAS:      ((bosh-server.alias))
        DEPLOYMENT: ((deployment.tests.name))

    - put: bosh-errand-lock
      params: {release: bosh-errand-lock}
    

    - task: update-targets-hosts
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/update-targets-hosts.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))
        MONGO_PORT:         ((deployment.tests.mongod.port))  

    - task: check-content-before-backup
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/test-restoration.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))   

    - task: run-backup
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/run-backup.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))

    - task: drop-collection
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/drop-collection.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

    - task: run-restore
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/run-restore.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))

    - task: test-restoration
      file: mongodb-compilation-bosh-release/ci/jobs/backup-restore-test/tasks/test-restoration.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))    
 
- name: delete-deployment
  serial: false
  plan:

    - get: mongodb-compilation-bosh-release
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - get: deployed
      trigger: false
      passed: [deploy-strap]

    - task: remove-deployment
      file: mongodb-compilation-bosh-release/ci/jobs/remove-deployment/tasks/remove-deployment.yml      
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENTS_NETWORK:  ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))

    - put: removed
      params: { file: removed/keyval.properties }
    