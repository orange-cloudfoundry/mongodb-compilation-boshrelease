---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource
      
resources:

  - name: mongodb-compilation-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb-compilation.uri))
      branch: ((repositories.mongodb-compilation.branch))

  - name: mongodb-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb.uri))
      branch: ((repositories.mongodb.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))
      file: mongodb_compiled_version
      username: ((repositories.mongodb-compilation.username))
      password: ((repositories.mongodb-compilation.password))
      git_user: "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"

  - name: rocksdb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-compilation-boshrelease.git
      branch: ((repositories.mongodb-compilation.branch))
      file: rocksdb_compiled_version
      username: ((repositories.mongodb-compilation.username))
      password: ((repositories.mongodb-compilation.password))
      git_user: "((repositories.mongodb-compilation.git_user)) <((repositories.mongodb-compilation.email))>"
  
  - name: versions
    type: keyval

  - name: deployed
    type: keyval

  - name: deployment-specs
    type: keyval
  
  - name: filled
    type: keyval

  - name: bosh-errand-lock
    type: pool
    source:
      uri: ((repositories.locks-pool.uri))
      branch: ((repositories.locks-pool.branch))
      pool: bosh
      username: ((repositories.locks-pool.username))
      password: ((repositories.locks-pool.password))

  - name: deployment-spec-lock
    type: pool
    source:
      uri: ((repositories.locks-pool.uri))
      branch: ((repositories.locks-pool.branch))
      pool: bosh
      username: ((repositories.locks-pool.username))
      password: ((repositories.locks-pool.password))    

jobs:

- name: init-bootstrap-config
  plan:
    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release  

    - aggregate:
      - get: mongodb-version
        trigger: true
      - get: rocksdb-version
        trigger: true
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))
  
        
    - task: set-versions
      file: mongodb-compilation-bosh-release/ci/compilation/set-versions/tasks/set-versions.yml
      params: 
        MONGO_VERSION:  ((deployment.bootstrap.mongodb-version))
        ROCKS_VERSION:  ((deployment.bootstrap.rocksdb-version))

    - put: versions
      params: {file: versions/keyval.properties}    

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))       
        SIGNATURE_VERSION:  ((blobstores.compilation.signature-version))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))


    - task: upload-compiled-blobs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/upload-compiled-blobs.yml
      params:
        ACCESS_KEY_ID:            ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:        ((blobstores.release.secret_access_key))
        ENDPOINT_URL:             ((blobstores.release.endpoint-url))
        BUCKET:                   ((blobstores.release.bucket))
        COMPIL_ACCESS_KEY_ID:     ((blobstores.compilation.access_key_id))
        COMPIL_SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        COMPIL_ENDPOINT_URL:      ((blobstores.compilation.endpoint-url))
        COMPIL_BUCKET:            ((blobstores.compilation.bucket))
        SIGNATURE_VERSION:        ((blobstores.compilation.signature-version))
        SKIP_SSL:                 ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:                 ((blobstores.compilation.certificate))
        COMPIL_SKIP_SSL:          ((blobstores.compilation.skip-ssl-validation))
        COMPIL_SSL_CERT:          ((blobstores.compilation.certificate))

    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))

    - task: initialize-deployment-spec-ressource
      file: mongodb-compilation-bosh-release/ci/common/tasks/initialize-keyval-ressource.yml

    - put: deployment-specs
      params: {file: output/keyval.properties}     


- name: init-new-config
  plan:
    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release  

    - aggregate:
      - get: versions
        trigger: true
        passed: [init-bootstrap-config] 
      - get: mongodb-version
      - get: rocksdb-version
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))
          
    - task: set-versions
      file: mongodb-compilation-bosh-release/ci/compilation/set-versions/tasks/set-versions.yml
      
    - put: versions
      params: {file: versions/keyval.properties}    

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.compilation.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.compilation.secret_access_key))
        ENDPOINT_URL:       ((blobstores.compilation.endpoint-url))
        BUCKET:             ((blobstores.compilation.bucket))       
        SIGNATURE_VERSION:  ((blobstores.compilation.signature-version))
        SKIP_SSL:           ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:           ((blobstores.compilation.certificate))
 

    - task: upload-compiled-blobs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/upload-compiled-blobs.yml
      params:
        ACCESS_KEY_ID:            ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:        ((blobstores.release.secret_access_key))
        ENDPOINT_URL:             ((blobstores.release.endpoint-url))
        BUCKET:                   ((blobstores.release.bucket))
        COMPIL_ACCESS_KEY_ID:     ((blobstores.compilation.access_key_id))
        COMPIL_SECRET_ACCESS_KEY: ((blobstores.compilation.secret_access_key))
        COMPIL_ENDPOINT_URL:      ((blobstores.compilation.endpoint-url))
        COMPIL_BUCKET:            ((blobstores.compilation.bucket))
        SIGNATURE_VERSION:        ((blobstores.compilation.signature-version))
        SKIP_SSL:                 ((blobstores.compilation.skip-ssl-validation))
        SSL_CERT:                 ((blobstores.compilation.certificate))
        COMPIL_SKIP_SSL:          ((blobstores.compilation.skip-ssl-validation))
        COMPIL_SSL_CERT:          ((blobstores.compilation.certificate))

    - task: upload-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/upload-config-files.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))

##############################################################################################################
##############################################################################################################
##                                          Ubuntu                                                          ##
##############################################################################################################
##############################################################################################################

########################################################################################################
#                                      Deploy a bootstrap version of mongodb
########################################################################################################

- name: deploy-bootstrap-ubuntu
  serial: true
  plan:
    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release 
    - aggregate: 
      - get: versions
        trigger: true
        passed: [init-bootstrap-config]
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))       
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))
      
  
    - task: deploy-rs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        STEMCELL:             ((deployment.bootstrap.stemcell))
    
    - put: deployed
      params: { file: deployed/keyval.properties }

########################################################################################################
#                                      Insert some datas  
########################################################################################################      

- name: insert-datas-ubuntu
  serial: true
  plan:
    - get: deployed
      trigger: true
      passed: [deploy-bootstrap-ubuntu]

    - get: deployment-specs
      trigger: false

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))


    - put: deployment-spec-lock
      params: {claim: deploy-specs}

    - task: get-mongo-pwd
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/get-root-pwd.yml
      params:
        BOSH_ALIAS:       ((bosh-server.alias))
        IP:               ((deployment.tests.credhub.ip))
        PORT:             ((deployment.tests.credhub.port))
        USER:             ((deployment.tests.credhub.username))
        PASSWORD:         ((deployment.tests.credhub.password))
        VAR:              mongo_root_password
        DEPLOYMENT_NAME:  ((deployment.tests.name))
      on_failure:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}
      on_abort:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}

    - put: deployment-specs
      params: { file: output/keyval.properties}

    - task: get-deployment-ips
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/get-deployment-ips.yml
      params:
        CA_CERT:          ((bosh-server.ca))
        IP:               ((bosh-server.ip))
        ALIAS:            ((bosh-server.alias)) 
        USER:             ((bosh-server.user))
        PASSWORD:         ((bosh-server.password))
        DEPLOYMENT_NAME:  ((deployment.tests.name))
      ensure:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}

    - put: deployment-specs
      params: { file: output/keyval.properties}    

    - task: insert-collection
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/insert-collection.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

    - put: filled
      params: { file: filled/keyval.properties }

########################################################################################################
#                                      Mongodb Version Upgrade Test 
########################################################################################################

- name: mongo-version-upgrade-ubuntu
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [insert-datas-ubuntu]

    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release
    - get: deployment-specs

    - get: versions
      passed: [init-new-config]

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files-mainrelease
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
  
    - task: upgrade-rs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        STEMCELL:             ((deployment.bootstrap.stemcell))

    - task: check-mongo-version
      file: mongodb-compilation-bosh-release/ci/deployment/version-upgrade/tasks/check-mongo-version.yml    
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

########################################################################################################
#                                      Stemcell Upgrade Test 
########################################################################################################

- name: stemcell-upgrade-ubuntu
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [mongo-version-upgrade-ubuntu]

    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release
    - get: deployment-specs

    - get: versions
      passed: [mongo-version-upgrade-ubuntu]

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files-mainrelease
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
  
    - task: upgrade-stemcell
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))


########################################################################################################
#                                      Mongodb Acceptance Tests
########################################################################################################

- name: acceptance-tests-ubuntu
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [stemcell-upgrade-ubuntu]

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias))
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-acceptance-tests
      file: mongodb-compilation-bosh-release/ci/deployment/acceptance-tests/tasks/run-acceptance-tests.yml
      params:
        ALIAS:    ((bosh-server.alias))
        DEPLOYMENT_NAME:  ((deployment.tests.name))
      ensure:
        put: bosh-errand-lock
        params: {release: bosh-errand-lock}

########################################################################################################
#                                      Mongodb Shield Test 
########################################################################################################           

- name: backup-restore-test-ubuntu
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [stemcell-upgrade-ubuntu]

    - get: deployment-specs

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: shield-clean-up
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/shield-clean-up.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))

    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-shield-import-errand
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-shield-errand.yml
      params:
        ALIAS:      ((bosh-server.alias))
        DEPLOYMENT: ((deployment.tests.name))
      ensure:
        put: bosh-errand-lock
        params: {release: bosh-errand-lock}  

    - task: update-targets-hosts
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/update-targets-hosts.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))
        MONGO_PORT:         ((deployment.tests.mongod.port))  

    - task: check-content-before-backup
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/test-restoration.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))   

    - task: run-backup
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-backup.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))

    - task: drop-collection
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/drop-collection.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

    - task: run-restore
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-restore.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))

    - task: test-restoration
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/test-restoration.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

########################################################################################################
#                                      Removing the deployment 
########################################################################################################            
 
- name: delete-deployment
  serial: false
  plan:

    - get: mongodb-compilation-bosh-release
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - get: deployed
      trigger: false
      passed: [deploy-bootstrap-ubuntu]

    - task: remove-deployment
      file: mongodb-compilation-bosh-release/ci/deployment/remove-deployment/tasks/remove-deployment.yml      
      params:
        ALIAS:                ((bosh-server.alias)) 
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))

##############################################################################################################
##############################################################################################################
##                                          CENTOS                                                          ##
##############################################################################################################
##############################################################################################################        


########################################################################################################
#                                      Deploy a bootstrap version of mongodb
########################################################################################################

- name: deploy-bootstrap-centos
  serial: true
  plan:
    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release 
    - aggregate: 
      - get: versions
        trigger: true
        passed: [init-bootstrap-config]
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: get-config-files
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))       
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
        MONGODB_VERSION:    ((deployment.bootstrap.mongodb-version))
      
  
    - task: deploy-rs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        STEMCELL:             ((deployment.bootstrap.stemcell))
        STEMCELL_TYPE:        centos

    - put: deployed
      params: { file: deployed/keyval.properties }


########################################################################################################
#                                      Insert some datas  
########################################################################################################      

- name: insert-datas-centos
  serial: true
  plan:
    - get: deployed
      trigger: true
      passed: [deploy-bootstrap-centos]

    - get: deployment-specs
      trigger: false
 
    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - put: deployment-spec-lock
      params: {claim: deploy-specs}      

    - task: get-mongo-pwd
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/get-root-pwd.yml
      params:
        BOSH_ALIAS:       ((bosh-server.alias))
        IP:               ((deployment.tests.credhub.ip))
        PORT:             ((deployment.tests.credhub.port))
        USER:             ((deployment.tests.credhub.username))
        PASSWORD:         ((deployment.tests.credhub.password))
        DEPLOYMENT_NAME:  ((deployment.tests.name))
        STEMCELL_TYPE:    centos
        VAR:              mongo_root_password
      on_failure:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}
      on_abort:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}  

    - put: deployment-specs
      params: { file: output/keyval.properties}

    - task: get-deployment-ips
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/get-deployment-ips.yml
      params:
        CA_CERT:          ((bosh-server.ca))
        IP:               ((bosh-server.ip))
        ALIAS:            ((bosh-server.alias)) 
        USER:             ((bosh-server.user))
        PASSWORD:         ((bosh-server.password))
        DEPLOYMENT_NAME:  ((deployment.tests.name))
        STEMCELL_TYPE:    centos
      ensure:
        put: deployment-spec-lock
        params: {release: deployment-spec-lock}

    - put: deployment-specs
      params: { file: output/keyval.properties}    

    - task: insert-collection
      file: mongodb-compilation-bosh-release/ci/deployment/insertions-tests/tasks/insert-collection.yml
      params:
        USER:           ((deployment.tests.mongod.root-username))
        PORT:           ((deployment.tests.mongod.port))
        STEMCELL_TYPE:  centos

    - put: filled
      params: { file: filled/keyval.properties }

########################################################################################################
#                                      Mongodb Version Upgrade Test 
########################################################################################################

- name: mongo-version-upgrade-centos
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [insert-datas-centos]

    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release
    - get: deployment-specs

    - get: versions
      passed: [init-new-config]

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files-mainrelease
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
  
    - task: upgrade-rs
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        STEMCELL:             ((deployment.bootstrap.stemcell))
        STEMCELL_TYPE:        centos

    - task: check-mongo-version
      file: mongodb-compilation-bosh-release/ci/deployment/version-upgrade/tasks/check-mongo-version.yml    
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))

########################################################################################################
#                                      Stemcell Upgrade Test 
########################################################################################################

- name: stemcell-upgrade-centos
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [mongo-version-upgrade-centos]

    - get: mongodb-bosh-release
    - get: mongodb-compilation-bosh-release
    - get: deployment-specs

    - get: versions
      passed: [mongo-version-upgrade-centos]

    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))
    
    - task: get-config-files-mainrelease
      file: mongodb-compilation-bosh-release/ci/common/tasks/get-config-files-mainrelease.yml
      params:
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
  
    - task: upgrade-stemcell
      file: mongodb-compilation-bosh-release/ci/deployment/deploy/tasks/deploy-rs.yml
      params:
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias)) 
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        DEPLOYMENT_NETWORK:   ((deployment.tests.network))
        SHIELD_URL:           ((deployment.tests.shield.core))
        SHIELD_TOKEN:         ((deployment.tests.shield.token))
        SHIELD_TENANT:        ((deployment.tests.shield.tenant))
        SHIELD_STORAGE:       ((deployment.tests.shield.storage))
        MONGO_PORT:           ((deployment.tests.mongod.port))
        PERSISTENT_DISK_TYPE: ((deployment.tests.mongod.persistent-disk-type))
        VM_TYPE:              ((deployment.tests.mongod.vm-type))
        ROOT_USERNAME:        ((deployment.tests.mongod.root-username))
        STEMCELL_TYPE:        centos

########################################################################################################
#                                      Mongodb Acceptance Tests
########################################################################################################

- name: acceptance-tests-centos
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [stemcell-upgrade-centos]

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias))
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-acceptance-tests
      file: mongodb-compilation-bosh-release/ci/deployment/acceptance-tests/tasks/run-acceptance-tests.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME:  ((deployment.tests.name))
        STEMCELL_TYPE:    centos
      ensure:
        put: bosh-errand-lock
        params: {release: bosh-errand-lock}

########################################################################################################
#                                      Mongodb Shield Test 
########################################################################################################           

- name: backup-restore-test-centos
  serial: true
  plan:
    - get: filled
      trigger: true
      passed: [stemcell-upgrade-centos]

    - get: deployment-specs

    - get: mongodb-compilation-bosh-release
    - aggregate:
      - task: create-bosh-config
        file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - task: shield-clean-up
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/shield-clean-up.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))
        STEMCELL_TYPE:      centos

    - put: bosh-errand-lock
      params: {claim: errand}

    - task: run-shield-import-errand
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-shield-errand.yml
      params:
        ALIAS:      ((bosh-server.alias))
        DEPLOYMENT: ((deployment.tests.name))
        STEMCELL_TYPE: centos
      ensure:
        put: bosh-errand-lock
        params: {release: bosh-errand-lock}  

    - task: update-targets-hosts
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/update-targets-hosts.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))
        MONGO_PORT:         ((deployment.tests.mongod.port))
        STEMCELL_TYPE:      centos

    - task: check-content-before-backup
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/test-restoration.yml
      params:
        USER: ((deployment.tests.mongod.root-username))
        PORT: ((deployment.tests.mongod.port))   

    - task: run-backup
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-backup.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        STEMCELL_TYPE:      centos

    - task: drop-collection
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/drop-collection.yml
      params:
        USER:           ((deployment.tests.mongod.root-username))
        PORT:           ((deployment.tests.mongod.port))
        STEMCELL_TYPE:  centos

    - task: run-restore
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/run-restore.yml
      params:
        SHIELD_CA:          ((deployment.tests.shield.ca))
        SHIELD_CORE_TOKEN:  ((deployment.tests.shield.token))
        SHIELD_CORE:        ((deployment.tests.shield.core))
        SHIELD_TENANT:      ((deployment.tests.shield.tenant))
        SHIELD_TARGET:      ((deployment.tests.name))
        STEMCELL_TYPE:      centos

    - task: test-restoration
      file: mongodb-compilation-bosh-release/ci/deployment/backup-restore-test/tasks/test-restoration.yml
      params:
        USER:           ((deployment.tests.mongod.root-username))
        PORT:           ((deployment.tests.mongod.port))
        STEMCELL_TYPE:  centos

########################################################################################################
#                                      Removing the deployment 
########################################################################################################            
 
- name: delete-deployment-centos
  serial: false
  plan:

    - get: mongodb-compilation-bosh-release
    - task: create-bosh-config
      file: mongodb-compilation-bosh-release/ci/common/tasks/create-bosh-config.yml
      params:
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - get: deployed
      trigger: false
      passed: [deploy-bootstrap-centos]

    - task: remove-deployment
      file: mongodb-compilation-bosh-release/ci/deployment/remove-deployment/tasks/remove-deployment.yml      
      params:
        ALIAS:                ((bosh-server.alias)) 
        RELEASE_NAME:         ((deployment.tests.name))
        DEPLOYMENT_NAME:      ((deployment.tests.name))
        STEMCELL_TYPE:        centos